lex: package PACKAGE
lex: runtime NAME
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: mal NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int32 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
test.go:2 lex: TOKEN '*'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: throwindex NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: throwreturn NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: throwinit NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: panicl NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printbool NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printfloat NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: float64 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printint NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int64 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printuint NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: uint64 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printstring NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printpointer NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printiface NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printeface NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printslice NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printnl NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: printsp NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: catstring NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: cmpstring NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: slicestring NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: int NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: indexstring NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: uint8 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: intstring NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int64 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: slicebytetostring NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
test.go:2 lex: TOKEN '['
test.go:2 lex: TOKEN ']'
lex: uint8 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: sliceinttostring NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
test.go:2 lex: TOKEN '['
test.go:2 lex: TOKEN ']'
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: stringiter NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: stringiter2 NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: string NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: retk NAME
lex: int NAME
test.go:2 lex: TOKEN ','
lex: retv NAME
lex: int NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceI2E NAME
test.go:2 lex: TOKEN '('
lex: iface NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceE2I NAME
test.go:2 lex: TOKEN '('
lex: typ NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: iface NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceT2E NAME
test.go:2 lex: TOKEN '('
lex: typ NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: elem NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceE2T NAME
test.go:2 lex: TOKEN '('
lex: typ NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: elem NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceE2I2 NAME
test.go:2 lex: TOKEN '('
lex: typ NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: iface NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceE2T2 NAME
test.go:2 lex: TOKEN '('
lex: typ NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: elem NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceT2I NAME
test.go:2 lex: TOKEN '('
lex: typ1 NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: typ2 NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: elem NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceI2T NAME
test.go:2 lex: TOKEN '('
lex: typ NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: iface NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceI2T2 NAME
test.go:2 lex: TOKEN '('
lex: typ NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: iface NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceI2I NAME
test.go:2 lex: TOKEN '('
lex: typ NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: iface NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceI2Ix NAME
test.go:2 lex: TOKEN '('
lex: typ NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: iface NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceI2I2 NAME
test.go:2 lex: TOKEN '('
lex: typ NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: iface NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifaceeq NAME
test.go:2 lex: TOKEN '('
lex: i1 NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: i2 NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: efaceeq NAME
test.go:2 lex: TOKEN '('
lex: i1 NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: i2 NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: ifacethash NAME
test.go:2 lex: TOKEN '('
lex: i1 NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: uint32 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: efacethash NAME
test.go:2 lex: TOKEN '('
lex: i1 NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ret NAME
lex: uint32 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: makemap NAME
test.go:2 lex: TOKEN '('
lex: key NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: val NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: hint NAME
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: hmap NAME
lex: map MAP
test.go:2 lex: TOKEN '['
lex: any NAME
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: mapaccess1 NAME
test.go:2 lex: TOKEN '('
lex: hmap NAME
lex: map MAP
test.go:2 lex: TOKEN '['
lex: any NAME
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ','
lex: key NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: val NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: mapaccess2 NAME
test.go:2 lex: TOKEN '('
lex: hmap NAME
lex: map MAP
test.go:2 lex: TOKEN '['
lex: any NAME
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ','
lex: key NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: val NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: pres NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: mapassign1 NAME
test.go:2 lex: TOKEN '('
lex: hmap NAME
lex: map MAP
test.go:2 lex: TOKEN '['
lex: any NAME
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ','
lex: key NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: val NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: mapassign2 NAME
test.go:2 lex: TOKEN '('
lex: hmap NAME
lex: map MAP
test.go:2 lex: TOKEN '['
lex: any NAME
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ','
lex: key NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: val NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: pres NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: mapiterinit NAME
test.go:2 lex: TOKEN '('
lex: hmap NAME
lex: map MAP
test.go:2 lex: TOKEN '['
lex: any NAME
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ','
lex: hiter NAME
test.go:2 lex: TOKEN '*'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: mapiternext NAME
test.go:2 lex: TOKEN '('
lex: hiter NAME
test.go:2 lex: TOKEN '*'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: mapiter1 NAME
test.go:2 lex: TOKEN '('
lex: hiter NAME
test.go:2 lex: TOKEN '*'
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: key NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: mapiter2 NAME
test.go:2 lex: TOKEN '('
lex: hiter NAME
test.go:2 lex: TOKEN '*'
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: key NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: val NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: makechan NAME
test.go:2 lex: TOKEN '('
lex: elem NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: hint NAME
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: hchan NAME
lex: chan CHAN
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: chanrecv1 NAME
test.go:2 lex: TOKEN '('
lex: hchan NAME
test.go:2 lex: TOKEN LEX-293
lex: chan CHAN
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: elem NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: chanrecv2 NAME
test.go:2 lex: TOKEN '('
lex: hchan NAME
test.go:2 lex: TOKEN LEX-293
lex: chan CHAN
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: elem NAME
lex: any NAME
test.go:2 lex: TOKEN ','
lex: pres NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: chansend1 NAME
test.go:2 lex: TOKEN '('
lex: hchan NAME
lex: chan CHAN
test.go:2 lex: TOKEN LEX-293
lex: any NAME
test.go:2 lex: TOKEN ','
lex: elem NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: chansend2 NAME
test.go:2 lex: TOKEN '('
lex: hchan NAME
lex: chan CHAN
test.go:2 lex: TOKEN LEX-293
lex: any NAME
test.go:2 lex: TOKEN ','
lex: elem NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: pres NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: closechan NAME
test.go:2 lex: TOKEN '('
lex: hchan NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: closedchan NAME
test.go:2 lex: TOKEN '('
lex: hchan NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: newselect NAME
test.go:2 lex: TOKEN '('
lex: size NAME
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: sel NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: selectsend NAME
test.go:2 lex: TOKEN '('
lex: sel NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: hchan NAME
lex: chan CHAN
test.go:2 lex: TOKEN LEX-293
lex: any NAME
test.go:2 lex: TOKEN ','
lex: elem NAME
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: selected NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: selectrecv NAME
test.go:2 lex: TOKEN '('
lex: sel NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ','
lex: hchan NAME
test.go:2 lex: TOKEN LEX-293
lex: chan CHAN
lex: any NAME
test.go:2 lex: TOKEN ','
lex: elem NAME
test.go:2 lex: TOKEN '*'
lex: any NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: selected NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: selectdefault NAME
test.go:2 lex: TOKEN '('
lex: sel NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: selected NAME
lex: bool NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: selectgo NAME
test.go:2 lex: TOKEN '('
lex: sel NAME
test.go:2 lex: TOKEN '*'
lex: uint8 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: makeslice NAME
test.go:2 lex: TOKEN '('
lex: nel NAME
lex: int NAME
test.go:2 lex: TOKEN ','
lex: cap NAME
lex: int NAME
test.go:2 lex: TOKEN ','
lex: width NAME
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ary NAME
test.go:2 lex: TOKEN '['
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: sliceslice NAME
test.go:2 lex: TOKEN '('
lex: old NAME
test.go:2 lex: TOKEN '['
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ','
lex: lb NAME
lex: int NAME
test.go:2 lex: TOKEN ','
lex: hb NAME
lex: int NAME
test.go:2 lex: TOKEN ','
lex: width NAME
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ary NAME
test.go:2 lex: TOKEN '['
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: slicearray NAME
test.go:2 lex: TOKEN '('
lex: old NAME
test.go:2 lex: TOKEN '*'
lex: any NAME
test.go:2 lex: TOKEN ','
lex: nel NAME
lex: int NAME
test.go:2 lex: TOKEN ','
lex: lb NAME
lex: int NAME
test.go:2 lex: TOKEN ','
lex: hb NAME
lex: int NAME
test.go:2 lex: TOKEN ','
lex: width NAME
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ary NAME
test.go:2 lex: TOKEN '['
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: arraytoslice NAME
test.go:2 lex: TOKEN '('
lex: old NAME
test.go:2 lex: TOKEN '*'
lex: any NAME
test.go:2 lex: TOKEN ','
lex: nel NAME
lex: int NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
lex: ary NAME
test.go:2 lex: TOKEN '['
test.go:2 lex: TOKEN ']'
lex: any NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: closure NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: int64div NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int64 NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: int64 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int64 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: uint64div NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: uint64 NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: uint64 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: uint64 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: int64mod NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int64 NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: int64 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int64 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: uint64mod NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: uint64 NAME
test.go:2 lex: TOKEN ','
test.go:2 lex: TOKEN '?'
lex: uint64 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: uint64 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: float64toint64 NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: float64 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int64 NAME
test.go:2 lex: TOKEN ')'
lex: func FUNC
lex: runtime NAME
test.go:2 lex: TOKEN '.'
lex: int64tofloat64 NAME
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: int64 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '('
test.go:2 lex: TOKEN '?'
lex: float64 NAME
test.go:2 lex: TOKEN ')'
test.go:2 lex: TOKEN '$'
test.go:2 lex: TOKEN '$'
lex: package PACKAGE
lex: test NAME
lex: import IMPORT
lex: string literal
lex: package PACKAGE
lex: fmt NAME
lex: type TYPE
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
lex: struct STRUCT
test.go:4 lex: TOKEN '{'
lex: buf NAME
lex: string NAME
test.go:4 lex: TOKEN ';'
lex: wid NAME
lex: int NAME
test.go:4 lex: TOKEN ';'
lex: wid_present NAME
lex: bool NAME
test.go:4 lex: TOKEN ';'
lex: prec NAME
lex: int NAME
test.go:4 lex: TOKEN ';'
lex: prec_present NAME
lex: bool NAME
test.go:4 lex: TOKEN ';'
lex: minus NAME
lex: bool NAME
test.go:4 lex: TOKEN ';'
lex: plus NAME
lex: bool NAME
test.go:4 lex: TOKEN ';'
lex: sharp NAME
lex: bool NAME
test.go:4 lex: TOKEN ';'
lex: space NAME
lex: bool NAME
test.go:4 lex: TOKEN ';'
lex: zero NAME
lex: bool NAME
test.go:4 lex: TOKEN '}'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: clearflags NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: clearbuf NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: init NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Str NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Put NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Putnl NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Wp NAME
test.go:4 lex: TOKEN '('
lex: w NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: p NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: P NAME
test.go:4 lex: TOKEN '('
lex: p NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: W NAME
test.go:4 lex: TOKEN '('
lex: x NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: pad NAME
test.go:4 lex: TOKEN '('
lex: s NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_boolean NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: integer NAME
test.go:4 lex: TOKEN '('
lex: a NAME
lex: int64 NAME
test.go:4 lex: TOKEN ','
lex: base NAME
lex: uint NAME
test.go:4 lex: TOKEN ','
lex: is_signed NAME
lex: bool NAME
test.go:4 lex: TOKEN ','
lex: digits NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_d64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_d32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_d NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_ud64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_ud32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_ud NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_x64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_x32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_x NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_ux64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_ux32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_ux NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_X64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_X32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_X NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_uX64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_uX32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_uX NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_o64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_o32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_o NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_uo64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_uo32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_uo NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_b64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_b32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_b NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: uint NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_c NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_s NAME
test.go:4 lex: TOKEN '('
lex: s NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_sx NAME
test.go:4 lex: TOKEN '('
lex: s NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_sX NAME
test.go:4 lex: TOKEN '('
lex: s NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_q NAME
test.go:4 lex: TOKEN '('
lex: s NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_e64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_E64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_f64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_g64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_G64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_fb64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float64 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_e32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_E32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_f32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_g32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_G32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: Fmt_fb32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: float32 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: x NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: f NAME
test.go:4 lex: TOKEN '('
lex: a NAME
lex: float NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: x NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: e NAME
test.go:4 lex: TOKEN '('
lex: a NAME
lex: float NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: x NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: g NAME
test.go:4 lex: TOKEN '('
lex: a NAME
lex: float NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: x NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: fb NAME
test.go:4 lex: TOKEN '('
lex: a NAME
lex: float NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: type TYPE
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Formatter NAME
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
lex: Format NAME
test.go:4 lex: TOKEN '('
lex: f NAME
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: State NAME
test.go:4 lex: TOKEN ','
lex: c NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: GoStringer NAME
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
lex: GoString NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: State NAME
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
lex: Write NAME
test.go:4 lex: TOKEN '('
lex: b NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
lex: uint8 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: ret NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: err NAME
lex: os NAME
test.go:4 lex: TOKEN '.'
lex: Error NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: Width NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: wid NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: Precision NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: prec NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: Flag NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: bool NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Stringer NAME
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
lex: String NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
lex: struct STRUCT
test.go:4 lex: TOKEN '{'
lex: n NAME
lex: int NAME
test.go:4 lex: TOKEN ';'
lex: buf NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
lex: uint8 NAME
test.go:4 lex: TOKEN ';'
lex: fmt NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN '}'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: Width NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: wid NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: Precision NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: prec NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: Flag NAME
test.go:4 lex: TOKEN '('
lex: b NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: ensure NAME
test.go:4 lex: TOKEN '('
lex: n NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: addstr NAME
test.go:4 lex: TOKEN '('
lex: s NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: addbytes NAME
test.go:4 lex: TOKEN '('
lex: b NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
lex: uint8 NAME
test.go:4 lex: TOKEN ','
lex: start NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: end NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: add NAME
test.go:4 lex: TOKEN '('
lex: c NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: Write NAME
test.go:4 lex: TOKEN '('
lex: b NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
lex: uint8 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: ret NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: err NAME
lex: os NAME
test.go:4 lex: TOKEN '.'
lex: Error NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: printField NAME
test.go:4 lex: TOKEN '('
lex: field NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ','
lex: plus NAME
lex: bool NAME
test.go:4 lex: TOKEN ','
lex: sharp NAME
lex: bool NAME
test.go:4 lex: TOKEN ','
lex: depth NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: was_string NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: doprintf NAME
test.go:4 lex: TOKEN '('
lex: format NAME
lex: string NAME
test.go:4 lex: TOKEN ','
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: doprint NAME
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
test.go:4 lex: TOKEN ','
lex: addspace NAME
lex: bool NAME
test.go:4 lex: TOKEN ','
lex: addnewline NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: type TYPE
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: uintptrGetter NAME
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
lex: Get NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: uintptr NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: io NAME
test.go:4 lex: TOKEN '.'
lex: Writer NAME
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
lex: Write NAME
test.go:4 lex: TOKEN '('
lex: p NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
lex: uint8 NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: n NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: err NAME
lex: os NAME
test.go:4 lex: TOKEN '.'
lex: Error NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: os NAME
test.go:4 lex: TOKEN '.'
lex: Error NAME
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
lex: String NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncType NAME
lex: struct STRUCT
test.go:4 lex: TOKEN '{'
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: commonType NAME
test.go:4 lex: TOKEN ';'
lex: in NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
test.go:4 lex: TOKEN '*'
lex: runtime NAME
test.go:4 lex: TOKEN '.'
lex: Type NAME
test.go:4 lex: TOKEN ';'
lex: out NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
test.go:4 lex: TOKEN '*'
lex: runtime NAME
test.go:4 lex: TOKEN '.'
lex: Type NAME
test.go:4 lex: TOKEN '}'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncType NAME
test.go:4 lex: TOKEN ')'
lex: In NAME
test.go:4 lex: TOKEN '('
lex: i NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Type NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncType NAME
test.go:4 lex: TOKEN ')'
lex: NumIn NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncType NAME
test.go:4 lex: TOKEN ')'
lex: Out NAME
test.go:4 lex: TOKEN '('
lex: i NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Type NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncType NAME
test.go:4 lex: TOKEN ')'
lex: NumOut NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncValue NAME
lex: struct STRUCT
test.go:4 lex: TOKEN '{'
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: value NAME
test.go:4 lex: TOKEN ';'
lex: first NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: value NAME
test.go:4 lex: TOKEN ';'
lex: isInterface NAME
lex: bool NAME
test.go:4 lex: TOKEN '}'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncValue NAME
test.go:4 lex: TOKEN ')'
lex: IsNil NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncValue NAME
test.go:4 lex: TOKEN ')'
lex: Get NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: uintptr NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncValue NAME
test.go:4 lex: TOKEN ')'
lex: Set NAME
test.go:4 lex: TOKEN '('
lex: x NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncValue NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncValue NAME
test.go:4 lex: TOKEN ')'
lex: SetValue NAME
test.go:4 lex: TOKEN '('
lex: x NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: fv NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncValue NAME
test.go:4 lex: TOKEN ')'
lex: Call NAME
test.go:4 lex: TOKEN '('
lex: in NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Method NAME
lex: struct STRUCT
test.go:4 lex: TOKEN '{'
lex: PkgPath NAME
lex: string NAME
test.go:4 lex: TOKEN ';'
lex: Name NAME
lex: string NAME
test.go:4 lex: TOKEN ';'
lex: Type NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncType NAME
test.go:4 lex: TOKEN ';'
lex: Func NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncValue NAME
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
lex: struct STRUCT
test.go:4 lex: TOKEN '{'
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: value NAME
test.go:4 lex: TOKEN '}'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
test.go:4 lex: TOKEN ')'
lex: Set NAME
test.go:4 lex: TOKEN '('
lex: x NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
test.go:4 lex: TOKEN ')'
lex: SetValue NAME
test.go:4 lex: TOKEN '('
lex: x NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
test.go:4 lex: TOKEN ')'
lex: Field NAME
test.go:4 lex: TOKEN '('
lex: i NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
test.go:4 lex: TOKEN ')'
lex: FieldByIndex NAME
test.go:4 lex: TOKEN '('
lex: index NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: v NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
test.go:4 lex: TOKEN ')'
lex: FieldByName NAME
test.go:4 lex: TOKEN '('
lex: name NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
test.go:4 lex: TOKEN ')'
lex: NumField NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Type NAME
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
lex: PkgPath NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: Name NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: String NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: Size NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: uintptr NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: Align NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: FieldAlign NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: Method NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Method NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: NumMethod NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: uncommon NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: uncommonType NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
lex: Type NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Type NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: Interface NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
test.go:4 lex: TOKEN '}'
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: CanSet NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: bool NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: SetValue NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: Addr NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: uintptr NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: Method NAME
test.go:4 lex: TOKEN '('
lex: i NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncValue NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN ';'
lex: getAddr NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: addr NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: addr NAME
test.go:4 lex: TOKEN '*'
lex: any NAME
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: commonType NAME
lex: struct STRUCT
test.go:4 lex: TOKEN '{'
lex: size NAME
lex: uintptr NAME
test.go:4 lex: TOKEN ';'
lex: hash NAME
lex: uint32 NAME
test.go:4 lex: TOKEN ';'
lex: alg NAME
lex: uint8 NAME
test.go:4 lex: TOKEN ';'
lex: align NAME
lex: uint8 NAME
test.go:4 lex: TOKEN ';'
lex: fieldAlign NAME
lex: uint8 NAME
test.go:4 lex: TOKEN ';'
lex: string NAME
test.go:4 lex: TOKEN '*'
lex: string NAME
test.go:4 lex: TOKEN ';'
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: uncommonType NAME
test.go:4 lex: TOKEN '}'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: commonType NAME
test.go:4 lex: TOKEN ')'
lex: String NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: commonType NAME
test.go:4 lex: TOKEN ')'
lex: Size NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: uintptr NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: commonType NAME
test.go:4 lex: TOKEN ')'
lex: Align NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: commonType NAME
test.go:4 lex: TOKEN ')'
lex: FieldAlign NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: commonType NAME
test.go:4 lex: TOKEN ')'
lex: NumMethod NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: commonType NAME
test.go:4 lex: TOKEN ')'
lex: Method NAME
test.go:4 lex: TOKEN '('
lex: i NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: m NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Method NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: commonType NAME
test.go:4 lex: TOKEN ')'
lex: PkgPath NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: commonType NAME
test.go:4 lex: TOKEN ')'
lex: Name NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: method NAME
lex: struct STRUCT
test.go:4 lex: TOKEN '{'
lex: hash NAME
lex: uint32 NAME
test.go:4 lex: TOKEN ';'
lex: name NAME
test.go:4 lex: TOKEN '*'
lex: string NAME
test.go:4 lex: TOKEN ';'
lex: pkgPath NAME
test.go:4 lex: TOKEN '*'
lex: string NAME
test.go:4 lex: TOKEN ';'
lex: typ NAME
test.go:4 lex: TOKEN '*'
lex: runtime NAME
test.go:4 lex: TOKEN '.'
lex: Type NAME
test.go:4 lex: TOKEN ';'
lex: ifn NAME
lex: unsafe NAME
test.go:4 lex: TOKEN '.'
lex: Pointer NAME
test.go:4 lex: TOKEN ';'
lex: tfn NAME
lex: unsafe NAME
test.go:4 lex: TOKEN '.'
lex: Pointer NAME
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: uncommonType NAME
lex: struct STRUCT
test.go:4 lex: TOKEN '{'
lex: name NAME
test.go:4 lex: TOKEN '*'
lex: string NAME
test.go:4 lex: TOKEN ';'
lex: pkgPath NAME
test.go:4 lex: TOKEN '*'
lex: string NAME
test.go:4 lex: TOKEN ';'
lex: methods NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: method NAME
test.go:4 lex: TOKEN '}'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: uncommonType NAME
test.go:4 lex: TOKEN ')'
lex: uncommon NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: uncommonType NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: uncommonType NAME
test.go:4 lex: TOKEN ')'
lex: PkgPath NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: uncommonType NAME
test.go:4 lex: TOKEN ')'
lex: Name NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: uncommonType NAME
test.go:4 lex: TOKEN ')'
lex: Method NAME
test.go:4 lex: TOKEN '('
lex: i NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: m NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Method NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: t NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: uncommonType NAME
test.go:4 lex: TOKEN ')'
lex: NumMethod NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: type TYPE
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: value NAME
lex: struct STRUCT
test.go:4 lex: TOKEN '{'
lex: typ NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Type NAME
test.go:4 lex: TOKEN ';'
lex: addr NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: addr NAME
test.go:4 lex: TOKEN ';'
lex: canSet NAME
lex: bool NAME
test.go:4 lex: TOKEN '}'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: value NAME
test.go:4 lex: TOKEN ')'
lex: Type NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Type NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: value NAME
test.go:4 lex: TOKEN ')'
lex: Addr NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: uintptr NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: value NAME
test.go:4 lex: TOKEN ')'
lex: getAddr NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: addr NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: value NAME
test.go:4 lex: TOKEN ')'
lex: Interface NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
test.go:4 lex: TOKEN '}'
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: value NAME
test.go:4 lex: TOKEN ')'
lex: CanSet NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: value NAME
test.go:4 lex: TOKEN ')'
lex: Method NAME
test.go:4 lex: TOKEN '('
lex: i NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: FuncValue NAME
test.go:4 lex: TOKEN ')'
lex: type TYPE
lex: runtime NAME
test.go:4 lex: TOKEN '.'
lex: Type NAME
lex: interface INTERFACE
test.go:4 lex: TOKEN '{'
test.go:4 lex: TOKEN '}'
lex: type TYPE
lex: unsafe NAME
test.go:4 lex: TOKEN '.'
lex: Pointer NAME
test.go:4 lex: TOKEN '*'
lex: any NAME
lex: const CONST
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: allocSize NAME
test.go:4 lex: TOKEN '='
lex: integer literal
lex: const CONST
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: nByte NAME
test.go:4 lex: TOKEN '='
lex: integer literal
lex: const CONST
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: nPows10 NAME
test.go:4 lex: TOKEN '='
lex: integer literal
lex: const CONST
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: runeSelf NAME
test.go:4 lex: TOKEN '='
lex: integer literal
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fprint NAME
test.go:4 lex: TOKEN '('
lex: w NAME
lex: io NAME
test.go:4 lex: TOKEN '.'
lex: Writer NAME
test.go:4 lex: TOKEN ','
lex: a NAME
test.go:4 lex: TOKEN LEX-266
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: n NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: error NAME
lex: os NAME
test.go:4 lex: TOKEN '.'
lex: Error NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fprintf NAME
test.go:4 lex: TOKEN '('
lex: w NAME
lex: io NAME
test.go:4 lex: TOKEN '.'
lex: Writer NAME
test.go:4 lex: TOKEN ','
lex: format NAME
lex: string NAME
test.go:4 lex: TOKEN ','
lex: a NAME
test.go:4 lex: TOKEN LEX-266
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: n NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: error NAME
lex: os NAME
test.go:4 lex: TOKEN '.'
lex: Error NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fprintln NAME
test.go:4 lex: TOKEN '('
lex: w NAME
lex: io NAME
test.go:4 lex: TOKEN '.'
lex: Writer NAME
test.go:4 lex: TOKEN ','
lex: a NAME
test.go:4 lex: TOKEN LEX-266
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: n NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: error NAME
lex: os NAME
test.go:4 lex: TOKEN '.'
lex: Error NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Init· NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: New NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Print NAME
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN LEX-266
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: n NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: errno NAME
lex: os NAME
test.go:4 lex: TOKEN '.'
lex: Error NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Printf NAME
test.go:4 lex: TOKEN '('
lex: format NAME
lex: string NAME
test.go:4 lex: TOKEN ','
lex: v NAME
test.go:4 lex: TOKEN LEX-266
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: n NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: errno NAME
lex: os NAME
test.go:4 lex: TOKEN '.'
lex: Error NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Println NAME
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN LEX-266
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: n NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: errno NAME
lex: os NAME
test.go:4 lex: TOKEN '.'
lex: Error NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Sprint NAME
test.go:4 lex: TOKEN '('
lex: a NAME
test.go:4 lex: TOKEN LEX-266
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Sprintf NAME
test.go:4 lex: TOKEN '('
lex: format NAME
lex: string NAME
test.go:4 lex: TOKEN ','
lex: a NAME
test.go:4 lex: TOKEN LEX-266
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Sprintln NAME
test.go:4 lex: TOKEN '('
lex: a NAME
test.go:4 lex: TOKEN LEX-266
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: doPrec NAME
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ','
lex: def NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: fmtString NAME
test.go:4 lex: TOKEN '('
lex: f NAME
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ','
lex: s NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Fmt NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: getBool NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: val NAME
lex: bool NAME
test.go:4 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: getField NAME
test.go:4 lex: TOKEN '('
lex: v NAME
test.go:4 lex: TOKEN '*'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: StructValue NAME
test.go:4 lex: TOKEN ','
lex: i NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: getFloat32 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: val NAME
lex: float32 NAME
test.go:4 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: getFloat64 NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: val NAME
lex: float64 NAME
test.go:4 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: getInt NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: val NAME
lex: int64 NAME
test.go:4 lex: TOKEN ','
lex: signed NAME
lex: bool NAME
test.go:4 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: getPtr NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: val NAME
lex: uintptr NAME
test.go:4 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: getString NAME
test.go:4 lex: TOKEN '('
lex: v NAME
lex: reflect NAME
test.go:4 lex: TOKEN '.'
lex: Value NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: val NAME
lex: string NAME
test.go:4 lex: TOKEN ','
lex: ok NAME
lex: bool NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: newPrinter NAME
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
test.go:4 lex: TOKEN '*'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: pp NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: parsenum NAME
test.go:4 lex: TOKEN '('
lex: s NAME
lex: string NAME
test.go:4 lex: TOKEN ','
lex: start NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: end NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
lex: n NAME
lex: int NAME
test.go:4 lex: TOKEN ','
lex: got NAME
lex: bool NAME
test.go:4 lex: TOKEN ','
lex: newi NAME
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: func FUNC
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: putint NAME
test.go:4 lex: TOKEN '('
lex: buf NAME
test.go:4 lex: TOKEN '['
test.go:4 lex: TOKEN ']'
lex: uint8 NAME
test.go:4 lex: TOKEN ','
lex: base NAME
lex: uint64 NAME
test.go:4 lex: TOKEN ','
lex: val NAME
lex: uint64 NAME
test.go:4 lex: TOKEN ','
lex: digits NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
test.go:4 lex: TOKEN '('
test.go:4 lex: TOKEN '?'
lex: int NAME
test.go:4 lex: TOKEN ')'
lex: var VAR
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: initdone· NAME
lex: uint8 NAME
lex: var VAR
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: ldigits NAME
lex: string NAME
lex: var VAR
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: udigits NAME
lex: string NAME
test.go:4 lex: TOKEN '$'
test.go:4 lex: TOKEN '$'
lex: func FUNC
lex: trace NAME
test.go:4 lex: TOKEN '('
lex: s NAME
lex: string NAME
test.go:4 lex: TOKEN ')'
lex: string NAME
test.go:4 lex: TOKEN '{'
lex: fmt NAME
test.go:4 lex: TOKEN '.'
lex: Print NAME
test.go:4 lex: TOKEN '('
lex: entering NAME
test.go:4 lex: TOKEN ':'
lex: string literal
lex: return RETURN
lex: s NAME
test.go:6 lex: TOKEN '}'
lex: func FUNC
lex: un NAME
test.go:8 lex: TOKEN '('
lex: s NAME
lex: string NAME
test.go:8 lex: TOKEN ')'
test.go:8 lex: TOKEN '{'
lex: fmt NAME
test.go:9 lex: TOKEN '.'
lex: Print NAME
test.go:9 lex: TOKEN '('
lex: string literal
test.go:9 lex: TOKEN ','
lex: s NAME
test.go:9 lex: TOKEN ')'
test.go:10 lex: TOKEN '}'
lex: func FUNC
lex: a NAME
test.go:12 lex: TOKEN '('
test.go:12 lex: TOKEN ')'
test.go:12 lex: TOKEN '{'
lex: defer DEFER
lex: un NAME
test.go:12 lex: TOKEN '('
lex: trace NAME
test.go:12 lex: TOKEN '('
lex: string literal
test.go:12 lex: TOKEN ')'
test.go:12 lex: TOKEN ')'
test.go:12 lex: TOKEN ';'
lex: fmt NAME
test.go:13 lex: TOKEN '.'
lex: Print NAME
test.go:13 lex: TOKEN '('
lex: string literal
test.go:13 lex: TOKEN ')'
test.go:14 lex: TOKEN '}'
lex: func FUNC
lex: b NAME
test.go:16 lex: TOKEN '('
test.go:16 lex: TOKEN ')'
test.go:16 lex: TOKEN '{'
lex: defer DEFER
lex: un NAME
test.go:17 lex: TOKEN '('
lex: trace NAME
test.go:17 lex: TOKEN '('
lex: string literal
test.go:17 lex: TOKEN ')'
test.go:17 lex: TOKEN ')'
test.go:17 lex: TOKEN ';'
lex: fmt NAME
test.go:18 lex: TOKEN '.'
lex: Print NAME
test.go:18 lex: TOKEN '('
lex: string literal
test.go:18 lex: TOKEN ')'
test.go:18 lex: TOKEN ';'
lex: a NAME
test.go:19 lex: TOKEN '('
test.go:19 lex: TOKEN ')'
test.go:20 lex: TOKEN '}'
lex: func FUNC
lex: main NAME
test.go:22 lex: TOKEN '('
test.go:22 lex: TOKEN ')'
test.go:22 lex: TOKEN '{'
lex: b NAME
test.go:23 lex: TOKEN '('
test.go:23 lex: TOKEN ')'
test.go:23 lex: TOKEN ';'
test.go:24 lex: TOKEN '}'
test.go:4: syntax error near entering
test.go:4: newline in string